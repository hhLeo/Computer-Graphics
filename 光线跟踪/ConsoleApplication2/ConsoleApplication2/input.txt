background			#背景
	color= 0.1 0.1 0.1
end

camera				#设置摄像机信息
	O= -2 2 0.5			//感光点的位置					[*]
	N= 0.6 1 -0.6			//摄像机的朝向					[*]
	shade_quality= 10		//计算阴影的质量				[缺省值4]
	drefl_quality= 10		//计算镜面漫反射的质量				[缺省值4]
	image_H= 760			//bmp图像的象素高				[缺省值420]
	image_W= 1280			//bmp图像的象素宽				[缺省值420]
	lens_H= 0.6			//摄像机镜头的高（与镜头到感光点距离之比）	[缺省值0.88]
	lens_W= 1.0			//摄像机镜头的宽				[缺省值0.88]
end

light area			#设置一个矩形光源
	O= 5 3 3			//矩形光源的中心点				[*]
	Dx= 1.5 0 0			//矩形光源的x半轴				[*]
	Dy= 0 1.5 0			//矩形光源的y半轴				[*]
	color= 1 1 1			//光源的色光					[*]
end

light area			#设置一个矩形光源
	O= 1 3 3			//矩形光源的中心点				[*]
	Dx= 1.5 0 0			//矩形光源的x半轴				[*]
	Dy= 0 1.5 0			//矩形光源的y半轴				[*]
	color= 1 1 1			//光源的色光					[*]
end

primitive sphere		#设置一个球（一个透明的玻璃球）
	O= -0.5 5.14 -1.7		//球形						[*]
	R= 0.3				//半径						[*]
	refr= 1				//折射所占百分比				[缺省值0]
	rindex= 1.7			//折射率					[*有折射时必须]
	absor= 0 1 0			//吸收色光的强度				[*有折射时必须]
end


primitive sphere		#设置一个球（一个金色的金属球）
	O= 0.5 5.14 -1.8
	R= 0.2
	color= 0.71 0.651 0.259
	diff= 0.1
	spec= 0.9
	refl= 0.2
	refr= 0
	rindex= 1.3	#absor = 0 0 1
end

primitive sphere		#设置一个球（一个主要是镜面反射的球）
	O= 1.5 6.3 -1.6
	R= 0.4
	color= 0.5 0.5 1
	spec= 0.5			//镜面漫反射所占百分比				[缺省值0]
	refl= 0.5			//镜面反射所占百分比				[缺省值0]
end

primitive sphere		#设置一个球（一个大理石球）
	O= 0 6 -1.5
	R= 0.5
	color= 1 1 1
	texture= marble.bmp		//有纹理，设置纹理所在bmp文件			[*有纹理时必须]
	De= 0 0 1			//球的z轴					[缺省值(0,0,1)仅在有纹理时可选]
	Dc= 0 1 0			//球的极轴					[缺省值(0,1,0)仅在有纹理时可选]
	diff= 0.45			//漫反射百分比					[缺省值0]
	spec= 0.25			
	refl= 0.3
	drefl= 0.25			//蒙特卡罗算法计算镜面漫反射时反射光的偏差半径	[缺省值0，值为0时不使用该算法]
end

primitive plane			#设置一个球（木地板）
	N= 0 0 1			//平面的法向量（正方向）			[*]
	R= -2				//原点到平面的距离				[*]
	color= 1 1 1			
	diff= 0.3
	refl= 0.7
	drefl= 0.15
	texture= floor.bmp
	Dx= 8 0 0			//平面的x轴，其长度有意义：其纹理在场景中的长	[*有纹理时必须]
	Dy= 0 8 0			//平面的y轴					[*有纹理时必须]
end